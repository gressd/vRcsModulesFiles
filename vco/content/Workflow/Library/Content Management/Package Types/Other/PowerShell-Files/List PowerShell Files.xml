<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item2" object-name="workflow:name=generic" id="f2034bc3-17fa-423c-ac13-8bad37d4c67e" version="2.2.20" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[List PowerShell Files]]></display-name>
  <position y="18.136363636363633" x="65.0"/>
  <input>
    <param name="sourceConfigName" type="string"/>
    <param name="packageType" type="string"/>
  </input>
  <output>
    <param name="array" type="Array/string"/>
  </output>
  <attrib name="server" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="username" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="mountPath" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="password" type="SecureString" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <workflow-item  name="item0" type="end" end-mode="0">
    <position y="18.136363636363633" x="464.5"/>
  </workflow-item >
  <workflow-item  name="item1" out-name="item0" type="task">
    <display-name><![CDATA[List PowerShell Files]]></display-name>
    <script encoded="false"><![CDATA[var array =[];
System.log("endPoint:" +endpoint);
System.log("packageType:" +packageType);



var windowsShares = System.getModule("com.vmware.cse.clm.configs").getValueFromResourceConfig(endpoint,"windowsShares");
System.log("windowsShares:" +windowsShares);
// List directories in mountPath
var mountPaths = [];
for each (var share in windowsShares) {
	System.log("processing:shareName: " + share);

	    var mountPath = "/tmp/" + workflow.name.replace(/ /g,"_") + "/" + share  + "/" + System.getModule("com.vmware.cse.utils").generateGuid();
		System.log("mountPath: " + mountPath);
		mountPaths.push(mountPath);
		try {
			// Mount cifs share at mountPath
			var command = "mkdir -p " + mountPath + " && mount -rw -t cifs -o 'username=" + username + ",password=" + password + ",iocharset=utf8,file_mode=0777,dir_mode=077' '//" + System.resolveHostName(server) + "/" + share + "' " + mountPath;
			System.debug("Running command: " + command);
			var result = System.getModule("com.vmware.cse.clm.utils").executeSSH(command,null,null);
			System.debug("Result: " + result);
			
			// List directories in mountPath
			var command = "mount | grep " + mountPath;;
			System.debug("Running command: " + command);
			var result = System.getModule("com.vmware.cse.clm.utils").executeSSH(command,null,null);
			System.debug("Result: " + result );
			
			if (result.length == 0) {
				throw "Failed to mount share " + server;
			}
			
			
			// -noleaf added to prevent Warnings on count
			var command = "cd " +mountPath + "&& find . -noleaf | grep \".txt\" | cut -d \"/\" -f2-999 ";
			System.debug("Running command: " + command);
			var result = System.getModule("com.vmware.cse.clm.utils").executeSSH(command,null,endpoint);
			//System.debug("Result: " + result);
				
			for each (var psFile in result.split("\n")) {
				psFile = psFile.trim();
				if (psFile != "" && psFile != null && psFile.length > 0) {
					// Test adding the share before the name
					// Add the share name in the metaData KV pair
					var psFileName = psFile +" - [share=" +share +"]";
					array.push(psFileName);
					//array.push(psFile);
					//System.log("file: " + psFile);
					System.log("file:" +psFileName);
				}
			}
			
		} catch (e) {
			System.log("caught exception:" +e);
			throw "Failed to verify share '" + share  + "' on server '" + server + "' with error: " + e;
			
		} finally {
			System.log("exec:finally");
			// Unmount mountPath
			for each (var mPath in mountPaths) {
				var command = "umount " + mPath  + " && rmdir " + mPath;
				System.log("Command: " + command);
				try {
					var results = System.getModule("com.vmware.cse.clm.utils").executeSSH(command,null,null);
					//System.debug("Result: " + results);
				} catch (e2) {};
			}
		}	
}

array = array.sort();
]]></script>
    <in-binding>
      <bind name="endpoint" type="string" export-name="sourceConfigName"/>
      <bind name="packageType" type="string" export-name="packageType"/>
      <bind name="server" type="string" export-name="server"/>
      <bind name="username" type="string" export-name="username"/>
      <bind name="mountPath" type="string" export-name="mountPath"/>
      <bind name="password" type="SecureString" export-name="password"/>
    </in-binding>
    <out-binding>
      <bind name="array" type="Array/string" export-name="array"/>
    </out-binding>
    <position y="28.136363636363633" x="304.5"/>
  </workflow-item >
  <workflow-item  name="item2" out-name="item1" type="task">
    <display-name><![CDATA[Initialize]]></display-name>
    <script encoded="false"><![CDATA[// Endpoint Details
var server   = System.getModule("com.vmware.cse.clm.configs").getValueFromResourceConfig(endpoint,"server");
var username = System.getModule("com.vmware.cse.clm.configs").getValueFromResourceConfig(endpoint,"user");
var password = System.getModule("com.vmware.cse.clm.configs").getValueFromResourceConfig(endpoint,"password");
System.log("server:" +server);
System.log("username:" +username);
var debugMode = System.getModule("com.vmware.cse.clm.configs").getValueFromGlobalConfig("debugMode");

var mountPath = "/tmp/" + workflow.name.replace(/ /g,"_") + "/" + endpoint + "/" + System.getModule("com.vmware.cse.utils").generateGuid();
System.log("' mountPath: " + mountPath + "'");
]]></script>
    <in-binding>
      <bind name="endpoint" type="string" export-name="sourceConfigName"/>
      <bind name="packageType" type="string" export-name="packageType"/>
    </in-binding>
    <out-binding>
      <bind name="server" type="string" export-name="server"/>
      <bind name="username" type="string" export-name="username"/>
      <bind name="password" type="SecureString" export-name="password"/>
      <bind name="debugMode" type="boolean" explicitly-not-bound="true" export-name="NULL"/>
      <bind name="mountPath" type="string" export-name="mountPath"/>
    </out-binding>
    <position y="28.136363636363633" x="164.5"/>
  </workflow-item >
  <presentation>
    <p-param name="sourceConfigName">
      <desc><![CDATA[sourceConfigName]]></desc>
    </p-param>
    <p-param name="packageType">
      <desc><![CDATA[packageType]]></desc>
    </p-param>
  </presentation>
</workflow>
